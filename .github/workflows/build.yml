name: Build ESPectrum Firmware

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        env: [psram, nopsram]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install PlatformIO Core
      run: |
        python -m pip install --upgrade pip
        pip install platformio setuptools

    - name: Build ESPectrum firmware
      run: platformio run -e ${{ matrix.env }}

    - name: Upload ESPectrum firmware artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ESPectrum-firmware-${{ matrix.env }}
        path: |
          .pio/build/${{ matrix.env }}/*.bin
          .pio/build/${{ matrix.env }}/*.elf

  release:
    needs: build
    runs-on: ubuntu-latest
    if: success()  # Solo crea el release si el build es exitoso
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}  # Usa la referencia del commit como tag, puede ser 'refs/tags/v1.0.0'
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .pio/build/${{ matrix.env }}/firmware.bin
        asset_name: firmware-${{ matrix.env }}.bin
        asset_content_type: application/octet-stream

